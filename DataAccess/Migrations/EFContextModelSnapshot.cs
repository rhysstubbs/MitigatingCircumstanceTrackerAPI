// <auto-generated />
using MCT.DataAccess.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MCT.DataAccess.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MCT.DataAccess.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Filename");

                    b.Property<string>("Path");

                    b.HasKey("FileId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("MCT.DataAccess.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("RequestId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("MCT.DataAccess.Models.RequestFile", b =>
                {
                    b.Property<int>("RequestId");

                    b.Property<int>("FileId");

                    b.HasKey("RequestId", "FileId");

                    b.HasIndex("FileId");

                    b.ToTable("RequestFile");
                });

            modelBuilder.Entity("MCT.DataAccess.Models.RequestSubject", b =>
                {
                    b.Property<int>("RequestId");

                    b.Property<int>("SubjectId");

                    b.HasKey("RequestId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("RequestSubject");
                });

            modelBuilder.Entity("MCT.DataAccess.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("MCT.DataAccess.Models.RequestFile", b =>
                {
                    b.HasOne("MCT.DataAccess.Models.File", "File")
                        .WithMany("Requests")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MCT.DataAccess.Models.Request", "Request")
                        .WithMany("RequestFiles")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MCT.DataAccess.Models.RequestSubject", b =>
                {
                    b.HasOne("MCT.DataAccess.Models.Request", "Request")
                        .WithMany("RequestSubjects")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MCT.DataAccess.Models.Subject", "Subject")
                        .WithMany("RequestSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
